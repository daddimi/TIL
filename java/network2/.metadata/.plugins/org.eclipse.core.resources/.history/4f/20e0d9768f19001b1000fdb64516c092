package com.chat;

import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.Socket;

import com.msg.Msg;

public class Client {

	int port;
	String address;
	String id;
	Socket socket;
	Sender sender;
	
	public Client () {}
	
	public Client(String address, int port, String id) {
		this.address = address;
		this.port = port;
		this.id = id;
	}
	
	public void connect() throws InterruptedException, IOException {
		try {
			socket = new Socket(address, port);
		} catch (Exception e) {
			while(true) {
				Thread.sleep(2000);
				System.out.println("Retry..");
				try {
					socket = new Socket(address, port);
					break;
				} catch (Exception e1) {
					System.out.println("Retry...");
				} 
			}
		} 
		
		System.out.println("Connected Server: "+address);
		sender = new Sender(socket);
	}
	
	public void sendMsg() {
		
	}
	
	class Sender implements Runnable{
		Socket socket;
		ObjectOutputStream oo;
		Msg msg;
		public Sender(Socket socket) throws IOException {
			this.socket = socket;
			oo = new ObjectOutputStream(socket.getOutputStream());
		}
		public void setMsg(Msg msg) {
			this.msg = msg;
		}
		@Override
		public void run() {
			if(oo != null) {
				try {
					oo.writeObject(msg);
				} catch (IOException e) {
					e.printStackTrace();
					try {
						if(oo != null) {
							oo.close();
						}
						if(socket != null) {
							socket.close();
						}
					} catch(Exception e1) {
						e1.printStackTrace();
					}
				}
			}
		}
		
	}
	
	class Receiver extends Thread {
		
	}
	
	public static void main(String[] args) {
		Client client = new Client("192.168.0.36",5555,"[jr]");
		try {
			client.connect();
		} catch (InterruptedException e) {
			e.printStackTrace();
		}
	}

}
